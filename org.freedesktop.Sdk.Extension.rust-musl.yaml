id: org.freedesktop.Sdk.Extension.rust-musl
branch: '22.08'
runtime: org.freedesktop.Sdk
runtime-version: '22.08'
sdk: org.freedesktop.Sdk
build-extension: true
separate-locales: false
sdk-extensions:
  - org.freedesktop.Sdk.Extension.musl
build-options:
  cflags: -I/usr/lib/sdk/rust-musl/include
  cxxflags: -I/usr/lib/sdk/rust-musl/include
  ldflags: -L/usr/lib/sdk/rust-musl/lib
  prefix: /usr/lib/sdk/rust-musl
  libdir: /usr/lib/sdk/rust-musl/lib
  prepend-path: /usr/lib/sdk/rust-musl/bin
  prepend-ld-library-path: /usr/lib/sdk/rust-musl/lib
  prepend-pkg-config-path: /usr/lib/sdk/rust-musl/lib/pkgconfig
  append-path: /usr/lib/sdk/musl/bin
  strip: true
x-musl-static-build-options: &musl-static-build-options
  cflags: -static
  cxxflags: -static
  ldflags: -static -Wl,-fuse-ld=mold
  env:
    - AR=x86_64-linux-musl-ar
    - CC=x86_64-linux-musl-gcc
    - CXX=x86_64-linux-musl-g++
    - LD=x86_64-linux-musl-ld.mold

modules:
  - name: prepare-ccache
    buildsystem: simple
    build-commands:
      - |
        set -e
        if [ -n "$CCACHE_DIR" ]; then
          install -dm755 ${FLATPAK_DEST}/bin
          for cmp in gcc g++; do
            ln -s /usr/bin/ccache ${FLATPAK_DEST}/bin/${FLATPAK_ARCH}-linux-musl-${cmp}
          done
        fi
    cleanup:
      - '*'

  - name: musl-libc-shared
    buildsystem: simple
    build-commands:
      - install -Dm755 /usr/lib/sdk/musl/${FLATPAK_ARCH}-linux-musl/lib/libc.so ${FLATPAK_DEST}/lib/libc.musl-${FLATPAK_ARCH}.so.1
      # TODO: cosider enabling if patchelf doesn't break shared libs, or wait for the executables issue to be fixed
     #- mkdir ${FLATPAK_ARCH}-linux-musl/lib
     #- |
     #  set -e
     #  for l in atomic gcc_s gomp itm quadmath ssp stdc++; do
     #  cp --preserve=mode,links --no-dereference \
     #    /usr/lib/sdk/musl/${FLATPAK_ARCH}-linux-musl/lib/lib${l}.so* \
     #    ${FLATPAK_ARCH}-linux-musl/lib/
     ## possibly only libstdc++ needs to be patched as it's linked against libgcc_s
     #- |
     #  set -e
     #  for f in $(find ${FLATPAK_ARCH}-linux-musl -type f}); do
     #    patchelf --debug --add-rpath \
     #      ${FLATPAK_DEST}/lib:${FLATPAK_DEST}/${FLATPAK_ARCH}-linux-musl/lib \
     #      $f
     #  done
     #- cp -r ${FLATPAK_ARCH}-linux-musl ${FLATPAK_DEST}/

  - name: patchelf-static
    build-options: *musl-static-build-options
    sources:
      - type: archive
        url: https://github.com/NixOS/patchelf/archive/0.15.0.tar.gz
        sha256: 5d1eda9bad4439bb9c0a87fcba198d7c0d372f361e77de41d68d6308062e5000
        x-checker-data:
          type: anitya
          project-id: 2598
          stable-only: true
          url-template: https://github.com/NixOS/patchelf/archive/$version.tar.gz
    cleanup:
      - '*'

  - name: rust-musl-bin
    buildsystem: simple
    build-commands:
      # TODO: drop listing .so shared libs if not needed
      - |
        set -e
        for f in $(find cargo rustc rust-std-* \( -executable -a -type f \) -o -name '*.so'); do
          if [ "$(file --brief --mime-type $f)" = "text/x-shellscript" ]; then continue; fi
          echo "Found binary file: $f"
          if [[ "$f" != *".so" ]]; then
          patchelf --debug --set-interpreter \
            ${FLATPAK_DEST}/lib/libc.musl-${FLATPAK_ARCH}.so.1 \
            $f
          fi
          patchelf --debug --add-rpath \
          ${FLATPAK_DEST}/lib:${FLATPAK_DEST}/${FLATPAK_ARCH}-linux-musl/lib \
          $f
        done
      - ./install.sh --components=cargo,rustc,rust-std-${FLATPAK_ARCH}-unknown-linux-musl --prefix=${FLATPAK_DEST}
      # rustc and rust shared libs need libgcc_s
      - install -Dm755 -t ${FLATPAK_DEST}/${FLATPAK_ARCH}-linux-musl/lib/
        /usr/lib/sdk/musl/${FLATPAK_ARCH}-linux-musl/lib/libgcc_s.so.1
      - patchelf --debug --add-rpath ${FLATPAK_DEST}/lib:${FLATPAK_DEST}/${FLATPAK_ARCH}-linux-musl/lib
        ${FLATPAK_DEST}/${FLATPAK_ARCH}-linux-musl/lib/libgcc_s.so.1
    sources:
      - type: archive
        url: https://static.rust-lang.org/dist/rust-1.63.0-x86_64-unknown-linux-musl.tar.gz
        sha256: 4516f1fa2a0d9ec9176cc734e5faaa0a3d439bd49f75553a484b6c3c6d7905ab
        x-checker-data:
          type: anitya
          project-id: 13280
          stable-only: true
          url-template: https://static.rust-lang.org/dist/rust-$version-x86_64-unknown-linux-musl.tar.gz
    cleanup:
      - /etc
      - /share/doc
      - /share/zsh

  - name: packaging
    buildsystem: simple
    build-commands:
      - install -Dm755 enable.sh -t ${FLATPAK_DEST}/
    sources:
      - type: script
        dest-filename: enable.sh
        commands:
          - |
            SDKPATH=/usr/lib/sdk/rust-musl
            export PATH=${SDKPATH}/bin:$PATH
            if [ -z "$LD_LIBRARY_PATH" ]; then
              export LD_LIBRARY_PATH=${SDKPATH}/lib
            else
              export LD_LIBRARY_PATH+=:${SDKPATH}/lib
            fi
